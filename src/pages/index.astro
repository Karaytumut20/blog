---
import Card from '../components/Card.astro';
import products from '../data/data.json';

let selectedCategory = '';
let searchQuery = '';

const categories = [...new Set(products.map(product => product.category))]; // Kategorileri al

function filterProducts() {
  // Filtreleme fonksiyonunu güncelleyerek doğru çalışmasını sağlıyoruz
  return products.filter(product =>
    (selectedCategory === '' || product.category === selectedCategory) &&
    (searchQuery === '' || product.title.toLowerCase().includes(searchQuery.toLowerCase()))
  );
}
---

<div class="navbar">
  <div class="navbar-brand">
    <h1>Book Explorer</h1>
  </div>
  <nav class="navbar-center">
    <ul class="nav-links">
      <li><a href="#">Home</a></li>
      <li><a href="#">About</a></li>
      <li><a href="#">Contact</a></li>
      <li><a href="#">Categories</a></li>
    </ul>
  </nav>
  <div class="search-container">
    <input type="text" placeholder="Search books..." class="search-input" oninput="handleSearch(event)" />
  </div>
</div>

<div class="filter-container">
  <label for="category-filter">Filter by Category:</label>
  <select id="category-filter" onchange="handleCategoryChange(event)">
    <option value="">All</option>
    {categories.map(category => (
      <option value={category}>{category}</option>
    ))}
  </select>
</div>

<div class="main-container">
  <div class="content">
    <div class="cards-container">
      {filterProducts().map((product) => (
        <Card 
          key={product.id}
          title={product.title} 
          author={product.author} 
          stars={product.stars}
          description={product.description.substring(0, 200) + (product.description.length > 200 ? '...' : '')} 
          price={product.price} 
          imageUrl={product.img} 
          url={`/product/${product.id}`} 
        />
      ))}
    </div>
  </div>
</div>

<script>
  // JavaScript ile input değişimlerini yönetmek için fonksiyonlar
  function handleCategoryChange(event) {
    selectedCategory = event.target.value;
    updateDisplay();
  }

  function handleSearch(event) {
    searchQuery = event.target.value;
    updateDisplay();
  }

  function updateDisplay() {
    // Reaktif durumu günceller ve HTML'yi yeniden işler
    const container = document.querySelector('.cards-container');
    container.innerHTML = '';
    const products = filterProducts();

    products.forEach(product => {
      const card = document.createElement('div');
      card.classList.add('card');
      card.innerHTML = `
        <img src="${product.img}" alt="${product.title}" class="card-image" />
        <h2 class="card-title">${product.title}</h2>
        <p class="card-author">${product.author}</p>
        <p class="card-stars">⭐ ${product.stars}</p>
        <p class="card-description">${product.description.substring(0, 200)}${product.description.length > 200 ? '...' : ''}</p>
        <p class="card-price">${product.price ? `$${product.price.toFixed(2)}` : 'Price not available'}</p>
        <a href="/product/${product.id}" class="card-link">View More</a>
      `;
      container.appendChild(card);
    });
  }
</script>

<style>
  body {
    margin: 0;
    padding: 0;
    background: #f4f4f9;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    color: #333;
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
  }

  .navbar {
    width: 100%;
    background: #6200ea;
    padding: 10px 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: fixed;
    top: 0;
    z-index: 1000;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  }

  .navbar-brand {
    flex: 1;
  }

  .navbar-brand h1 {
    margin: 0;
    color: #fff;
    font-size: 1.8rem;
    font-weight: bold;
  }

  .navbar-center {
    flex: 2;
    display: flex;
    justify-content: center;
  }

  .nav-links {
    list-style: none;
    display: flex;
    gap: 20px;
    margin: 0;
    padding: 0;
  }

  .nav-links li a {
    color: #ddd;
    text-decoration: none;
    transition: color 0.3s;
    font-weight: 500;
  }

  .nav-links li a:hover {
    color: #fff;
  }

  .search-container {
    flex: 1;
    display: flex;
    justify-content: center;
  }

  .search-input {
    padding: 8px;
    border-radius: 20px;
    border: none;
    outline: none;
    font-size: 0.9rem;
    max-width: 300px;
    text-align: center;
  }

  .filter-container {
    margin-top: 80px;
    padding: 20px;
    display: flex;
    align-items: center;
    gap: 10px;
    color: #333;
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    width: 90%;
    max-width: 1400px;
    margin-bottom: 20px;
  }

  .filter-container select {
    padding: 8px;
    border-radius: 8px;
    border: 1px solid #ddd;
    outline: none;
    font-size: 1rem;
  }

  .main-container {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px;
    width: 100%;
  }

  .content {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 90%;
    max-width: 1400px;
  }

  .cards-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 30px;
    width: 100%;
    padding: 20px 0;
  }

  .card {
    position: relative;
    background: #ffffff;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s, box-shadow 0.3s;
  }

  .card:hover {
    transform: translateY(-10px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  }

  .card-content {
    padding: 20px;
    text-align: center;
  }

  .card-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-bottom: 1px solid #ddd;
    margin-bottom: 15px;
  }

  .card-title {
    font-size: 1.4rem;
    margin: 10px 0;
    color: #333;
    font-weight: bold;
  }

  .card-author {
    color: #666;
    font-size: 0.9rem;
    margin-bottom: 10px;
  }

  .card-stars {
    color: #f39c12;
    font-size: 1rem;
    margin-bottom: 10px;
  }

  .card-description {
    font-size: 0.9rem;
    color: #555;
    margin-bottom: 15px;
  }

  .card-price {
    font-weight: bold;
    color: #27ae60;
    margin-bottom: 15px;
  }

  .card-link {
    display: inline-block;
    padding: 10px 20px;
    background: #6200ea;
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
    transition: background 0.3s;
  }

  .card-link:hover {
    background: #3700b3;
  }
</style>
